name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      store_path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-node-22-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-22-pnpm-store-

      - name: Install dependencies
        run: nci

  lint:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Use pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.prepare.outputs.store_path }}
          key: ${{ runner.os }}-node-22-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-22-pnpm-store-

      - name: Install dependencies
        run: nci --offline

      - name: Run ESLint
        run: nr lint

  typecheck:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Use pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.prepare.outputs.store_path }}
          key: ${{ runner.os }}-node-22-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-22-pnpm-store-

      - name: Install dependencies
        run: nci --offline

      - name: Run TypeScript Typecheck
        run: nr type:check

  unit-test:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Use pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.prepare.outputs.store_path }}
          key: ${{ runner.os }}-node-22-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-22-pnpm-store-

      - name: Install dependencies
        run: nci --offline

      - name: Run Tests with Coverage
        run: nr test:coverage

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v5
        with:
          files: ./test-report.junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload Test Results
        uses: codecov/test-results-action@v1
        with:
          files: ./coverage/cobertura-coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
